generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id          String @id @default(cuid())
  email       String @unique
  password    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  bookshelves Bookshelf[]
  goals       Goal[]
}

model Bookshelf {
  id        String @id @default(cuid())
  userId    String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  books     Book[]

  user      User @relation(fields: [userId], references: [id])

  @@unique([id, userId])
}

model Book {
  id              String @id @default(cuid())
  userId          String
  bookshelfId     String
  authors         Author[] 
  cover           String
  hasCustomCover  Boolean
  isbn            String
  pageCount       Int
  publishDate     DateTime
  subtitle        String?
  title           String
  yearRead        Int?
  rating          Int?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())

  bookshelf       Bookshelf @relation(fields: [bookshelfId], references: [id], onDelete: Cascade)

  @@unique([id, userId])
}

model Author {
  id      String
  bookId  String
  name    String

  book    Book @relation(fields: [bookId], references: [id], onDelete: Cascade)

  @@unique([id, bookId])  
}

model Goal {
  id      String @id @default(cuid())
  userId  String
  year    Int
  value   Int

  user  User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, year])
}
